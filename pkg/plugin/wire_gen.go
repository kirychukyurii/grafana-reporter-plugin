// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package plugin

import (
	"github.com/google/wire"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/adapter/grafana"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/adapter/store"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/config"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/domain/service"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/handler/http"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/infra/cdp"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/infra/db"
	"github.com/kirychukyurii/grafana-reporter-plugin/pkg/infra/log"
)

// Injectors from wire.go:

func Initialize(reporterAppSetting *config.ReporterAppSetting, dbDB *db.DB, logger *log.Logger, grafanaHTTPAdapter grafana.GrafanaHTTPAdapter, browserPoolManager cdp.BrowserPoolManager) (*App, error) {
	reportStore := store.NewReportStore(dbDB, logger)
	report := service.NewReportService(reporterAppSetting, reportStore, grafanaHTTPAdapter, browserPoolManager)
	httpReport := http.NewReportHandler(report)
	app, err := newApp(reporterAppSetting, httpReport)
	if err != nil {
		return nil, err
	}
	return app, nil
}

// wire.go:

var wireBasicSet = wire.NewSet(store.ProviderSet, wire.Bind(new(store.ReportStoreManager), new(*store.ReportStore)), service.ProviderSet, wire.Bind(new(service.ReportService), new(*service.Report)), http.ProviderSet, wire.Bind(new(http.ReportHandler), new(*http.Report)))
